#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

BUILD_DIR=$1
CACHE_DIR=$2
set -e # fail fast
set -o pipefail

rm -rf $BUILD_DIR/local
if [ -d $CACHE_DIR/local ]; then
  cp -a $CACHE_DIR/local $BUILD_DIR/local
fi

rm -rf $BUILD_DIR/vendor/perl
mkdir -p $BUILD_DIR/vendor
if [ -d $CACHE_DIR/perl ]; then
    cp -a $CACHE_DIR/perl $BUILD_DIR/vendor/perl
fi

echo "-----> Starting perl buildpack"

cd $BUILD_DIR

PERLBREW_PACKAGE=http://install.perlbrew.pl/
VENDORED_PERL="$BUILD_DIR/vendor/perl"
export PERLBREW_ROOT=$VENDORED_PERL
export PERL_CPANM_OPT="--quiet --notest -l $BUILD_DIR/local"

echo "-----> Vendoring Perl"

mkdir -p $VENDORED_PERL  && curl -L -s $PERLBREW_PACKAGE | bash
source $PERLBREW_ROOT/etc/bashrc

if [ -x $(which perl) ]; then
  echo "-----> Using previously-built Perl"
else
  echo "-----> Building latest stable Perl with perlbrew"
  perlbrew install perl-stable
fi

perlbrew switch $(perlbrew list | cut -c3- | sort -n | tail -n1)

echo "-----> Installing cpanminus"

perlbrew install-cpanm

echo "-----> Installing Starman (PSGI webserver)"

cpanm Starman 

echo "-----> Installing CPAN dependencies"

cpanm Module::Install

if [ -e Makefile.PL ]; then
    if [ -n $( grep 'use Module::Install::Catalyst' Makefile.PL ) ]; then
      echo "-----> Found Catalyst app - installing runtime"
      cpanm Module::Install::Catalyst
      cpanm Catalyst::Runtime
    fi
fi

if [ -e cpanfile ]; then
    echo "-----> Found cpanfile - preparing for carton installation"
    echo "-----> Installing carton"
    cpanm Carton
fi

echo "-----> Installing dependencies with cpanminus"
cpanm --installdeps .


echo "-----> Done"

if [ -d $BUILD_DIR/local ]; then
  rm -rf $CACHE_DIR/local
  mkdir -p $CACHE_DIR
  cp -a $BUILD_DIR/local $CACHE_DIR/local
fi

if [ -d $BUILD_DIR/vendor/perl ]; then
  rm -rf $CACHE_DIR/perl
  mkdir -p $CACHE_DIR/perl
  cp -a $BUILD_DIR/vendor/perl $CACHE_DIR/perl
fi

exit 0
